#!/usr/bin/env bash

set -e
set -u

#Test all combinations of MCPL_HASZLIB, MCPL_NO_CUSTOM_GZIP and MCPL_NO_EXT_GZIP

#A bit hackish, but we want to compile mcpl again and again:

CC=$(python3 -c 'import pickle,dgbuild.cfg as c; print(pickle.loads(c.dirs.envcache.read_bytes())["system"]["langs"]["c"]["compiler"])')

CAN_USE_RPATHLINK=$(python3 -c 'import pickle,dgbuild.cfg as c; print(int(pickle.loads(c.dirs.envcache.read_bytes())["system"]["langs"]["c"].get("can_use_rpathlink_flag",0)))')

P=$(python3 -c "import dgbuild.cfg as c; print(c.pkgs['MCPL']['dirname'])")

mkdir -p fakebadgzip/
echo 'int main(){ return 1; }' | $CC -xc - -o fakebadgzip/gzip
if [ $? != 0 ]; then
    exit 1
fi

rpathflags="-Wl,-rpath,$ESS_LIB_DIR -Wl,-rpath,$ESS_LIB_DIR/links"
if [ x$CAN_USE_RPATHLINK == x1 ]; then
    rpathflags="${rpathflags} -Wl,-rpath-link,$ESS_LIB_DIR -Wl,-rpath-link,$ESS_LIB_DIR/links"
fi

if [ "x${CONDA_PREFIX:-}" != x ]; then
    rpathflags="${rpathflags} -Wl,-rpath,${CONDA_PREFIX}/lib -Wl,-rpath,${CONDA_PREFIX}/lib"
    if [ x$CAN_USE_RPATHLINK == x1 ]; then
        rpathflags="${rpathflags} -Wl,-rpath-link,${CONDA_PREFIX}/lib -Wl,-rpath-link,${CONDA_PREFIX}/lib"
    fi
fi

echo '#include "mcpl.h"' > main.c
echo 'int main() {mcpl_closeandgzip_outfile(mcpl_create_outfile("out.mcpl"));}' >> main.c
for a in 0 1; do
    for b in 0 1; do
        for c in 0 1; do
            rm -f out.mcpl*
            flags=""
            if [ $a == 1 ]; then
                flags="-DMCPL_HASZLIB ${flags} -lPKG__MiniZLib -DMCPL_ZLIB_INCPATH=\"MiniZLib/zlib.h\" -I$ESS_INCLUDE_DIR"
            fi
            if [ $b == 1 ]; then
                flags="${flags} -DMCPL_NO_CUSTOM_GZIP"
            fi
            if [ $c == 1 ]; then
                flags="${flags} -DMCPL_NO_EXT_GZIP"
            fi
            echo "=========================================================================="
            echo "=== Testing flags: "`echo ${flags}|sed "s#$ESS_INCLUDE_DIR#\\$ESSINC#"`
            #echo "===    rpathflags: ${rpathflags}"
            $CC -std=c99 -lm ${flags} ${rpathflags} -I$ESS_INCLUDE_DIR/MCPL -L$ESS_LIB_DIR/ $P/libsrc/mcpl.c main.c -lm ${flags} ${rpathflags} -o main && ./main
            EC=$?
            ls -1 out.mcpl*
            if [ $? == 0 ]; then
                echo "=== Again with broken gzip:"
                rm -f out.mcpl*
                failure=0
                PATH="$PWD/fakebadgzip:$PATH" ./main || failure=1
                ls -1 out.mcpl*
                if [ $failure == 1 ]; then
                    echo "  ==> Exit code non-zero (failure)."
                else
                    echo "  ==> Exit code 0."
                fi
            else
                echo "compilation failed"
                exit 1
            fi
        done
    done
done
